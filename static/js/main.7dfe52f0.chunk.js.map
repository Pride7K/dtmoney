{"version":3,"sources":["assets/logo.svg","components/Header/styles.ts","components/Header/Index.tsx","components/Dashboard/styles.ts","components/Summary/styles.ts","assets/entradas.svg","assets/saidas.svg","assets/total.svg","services/api.ts","hooks/useTransactions.tsx","components/Summary/index.tsx","components/TransactionsTable/styles.ts","components/TransactionsTable/index.tsx","components/Dashboard/index.tsx","styles/global.ts","components/NewTransactionModal/styles.ts","assets/close.svg","components/NewTransactionModal/index.tsx","App.tsx","index.tsx"],"names":["Container","styled","header","Content","div","Header","onOpenNewTransactionModal","console","log","src","logoImg","alt","onClick","main","api","axios","create","baseURL","TransactionsContext","createContext","TransactionsProvider","props","useState","transactions","setTransactions","transactionParam","a","post","createdAt","Date","response","transaction","data","useEffect","get","then","Provider","value","createTransaction","children","useTransactions","useContext","Summary","summary","reduce","acc","type","deposit","amount","total","withdraws","entradaImg","Intl","NumberFormat","style","currency","format","saidaImg","className","totalImg","TransactionsTable","map","title","category","DateTimeFormat","id","Dashboard","GlobalStyle","createGlobalStyle","form","TransactionContainer","colors","green","red","RadioBox","button","isActive","transparentize","activeColor","darken","NewTransactionModal","onRequestClose","isOpen","setType","setTitle","setCategory","setAmount","e","preventDefault","overlayClassName","closeImg","onSubmit","handleCreateNewTransaction","placeholder","onChange","target","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","Modal","setAppElement","createServer","models","Model","seeds","server","db","loadData","routes","this","namespace","schema","all","request","JSON","parse","requestBody","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7dfe52f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.614d71d1.svg\";","import styled from \"styled-components\"\r\n\r\n\r\nconst Container = styled.header`\r\nbackground:var(--blue);\r\n`\r\n\r\nconst Content = styled.div`\r\nmax-width: 1120px;\r\nmargin: 0 auto;\r\n\r\npadding: 2rem 1rem 12rem;\r\n\r\ndisplay: flex;\r\nalign-items: center;\r\njustify-content: space-between;\r\n\r\nbutton{\r\n    font-size: 1rem;\r\n    color: #fff;\r\n    background: var(--blue-light);\r\n    border: 0;\r\n    padding: 0 2rem;\r\n    border-radius: 0%.25rem;\r\n    height: 3rem;\r\n\r\n\r\n    transition: filter 0.2s;\r\n    &:hover{\r\n        filter:brightness(0.9);\r\n    }\r\n}\r\n\r\n`\r\n\r\nexport {Container,Content}","import logoImg from \"../../assets/logo.svg\";\r\nimport { Container, Content } from \"./styles\";\r\n\r\ninterface HeaderProps {\r\n  onOpenNewTransactionModal: ()=> void;\r\n}\r\n\r\nexport function Header({onOpenNewTransactionModal}:HeaderProps) {\r\n  console.log(onOpenNewTransactionModal)\r\n  return (\r\n    <Container>\r\n      <Content>\r\n        <img src={logoImg} alt=\"dt money\" />\r\n        <button onClick={onOpenNewTransactionModal}>Nova transação</button>\r\n      </Content>\r\n    </Container>\r\n  );\r\n}\r\n","import styled from \"styled-components\"\r\n\r\nconst Container = styled.main`\r\nmax-width: 1120px;\r\nmargin:0 auto;\r\npadding: 2.5rem 1rem;\r\n`\r\n\r\n\r\nexport {Container}","import styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(3,1fr);\r\n  gap: 2rem;\r\n  margin-top: -10rem;\r\n\r\n  div{\r\n      background: var(--shape);\r\n      padding: 1.5rem 2rem;\r\n      border-radius: 0.25rem;\r\n      color: var(--text-title);\r\n\r\n     header{\r\n         display: flex;\r\n         align-items: center;\r\n         justify-content: space-between;\r\n     }\r\n\r\n     strong{\r\n         display: block;\r\n         margin-top: 1rem;\r\n         font-size: 2rem;\r\n         font-weight: 500;\r\n         line-height: 3rem;\r\n     }\r\n\r\n     &.highlight-background{\r\n         background: var(--green);\r\n         color: #fff;\r\n     }\r\n  }\r\n\r\n`;\r\n\r\nexport { Container };\r\n","export default __webpack_public_path__ + \"static/media/entradas.d58effe2.svg\";","export default __webpack_public_path__ + \"static/media/saidas.6eb96d30.svg\";","export default __webpack_public_path__ + \"static/media/total.efc003fe.svg\";","import axios from \"axios\"\r\n\r\n\r\nconst api = axios.create({\r\n    baseURL:\"https://localhost:3000/api\"\r\n})\r\n\r\nexport {api}","import { createContext, ReactNode, useContext, useEffect, useState } from \"react\";\r\nimport { api } from \"../services/api\";\r\n\r\ninterface Transaction {\r\n  id: number;\r\n  title: string;\r\n  type: string;\r\n  category: string;\r\n  amount: number;\r\n  createdAt: string;\r\n}\r\n\r\ninterface TransactionsContextData{\r\n    transactions:Transaction[],\r\n    createTransaction: (transaction:TransactionInput)=> Promise<void>;\r\n}\r\n\r\n// Herança\r\ntype TransactionInput = Omit<Transaction, \"id\" | \"createdAt\">;\r\n\r\ninterface TransactionsProviderProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst TransactionsContext = createContext<TransactionsContextData>({} as TransactionsContextData);\r\n\r\nfunction TransactionsProvider(props: TransactionsProviderProps) {\r\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\r\n  useEffect(() => {\r\n    api\r\n      .get(\"transactions\")\r\n      .then(({ data }) => setTransactions(data.transactions));\r\n  }, []);\r\n\r\n  async function createTransaction(transactionParam: TransactionInput) {\r\n    const response = await api.post(\"transactions\", {\r\n        ...transactionParam,\r\n        createdAt:new Date()\r\n    });\r\n    const {transaction} = response.data;\r\n    setTransactions([...transactions,transaction])\r\n  }\r\n\r\n  return (\r\n    <TransactionsContext.Provider value={{transactions,createTransaction}}>\r\n      {props.children}\r\n    </TransactionsContext.Provider>\r\n  );\r\n}\r\n\r\nfunction useTransactions(){\r\n  const context = useContext(TransactionsContext)\r\n  return context\r\n}\r\n\r\nexport {  TransactionsProvider,useTransactions };\r\n","import { Container } from \"./styles\";\r\nimport entradaImg from \"../../assets/entradas.svg\"\r\nimport saidaImg from \"../../assets/saidas.svg\"\r\nimport totalImg from \"../../assets/total.svg\"\r\nimport { useTransactions } from \"../../hooks/useTransactions\";\r\n\r\nexport function Summary(){\r\n    const {transactions} = useTransactions();\r\n\r\n    const summary = transactions.reduce((acc,transaction)=>{\r\n        if(transaction.type === \"deposit\")\r\n        {\r\n            acc.deposit += transaction.amount\r\n            acc.total +=transaction.amount\r\n        }\r\n        else{\r\n            acc.withdraws += transaction.amount\r\n            acc.total -=transaction.amount\r\n        }\r\n        return acc\r\n    },{\r\n        deposit:0,\r\n        withdraws:0,\r\n        total:0\r\n    })\r\n    return (\r\n        <Container>\r\n            <div>\r\n                <header>\r\n                    <p>Entradas</p>\r\n                    <img src={entradaImg} alt=\"Entradas\" />\r\n                </header>\r\n                <strong>{\r\n                    new Intl.NumberFormat(\"pt-BR\",\r\n                    {style:\"currency\",currency:\"BRL\"}\r\n                    ).format(summary.deposit)}</strong>\r\n            </div>\r\n            <div>\r\n                <header>\r\n                    <p>Saidas</p>\r\n                    <img src={saidaImg} alt=\"Saidas\" />\r\n                </header>\r\n                <strong>-{\r\n                    new Intl.NumberFormat(\"pt-BR\",\r\n                    {style:\"currency\",currency:\"BRL\"}\r\n                    ).format(summary.withdraws)}</strong>\r\n            </div>\r\n            <div className=\"highlight-background\">\r\n                <header>\r\n                    <p>Total</p>\r\n                    <img src={totalImg} alt=\"Total\" />\r\n                </header>\r\n                <strong>{\r\n                    new Intl.NumberFormat(\"pt-BR\",\r\n                    {style:\"currency\",currency:\"BRL\"}\r\n                    ).format(summary.total)}</strong>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","import  styled  from 'styled-components';\r\nconst Container = styled.div`\r\nmargin-top: 4rem;\r\ntable{\r\n    width: 100%;\r\n    border-spacing: 0 0.5rem;\r\n\r\n    th{\r\n        color: var(--text-body);\r\n        font-weight: 400;\r\n        padding: 1rem 2rem;\r\n        text-align: left;\r\n        line-height: 1.5rem;\r\n    }\r\n    td{\r\n        padding: 1rem 2rem;\r\n        border: 0;\r\n        background: var(--shape);\r\n        color: var(--text-body);\r\n        border-radius: 0.25rem;\r\n\r\n        &:first-child{\r\n            color: var(--text-title);\r\n        }\r\n\r\n        &.deposit{\r\n            color: var(--green);\r\n        }\r\n        &.withdraw{\r\n            color: var(--red);\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport {Container}","import { Container } from \"./styles\";\r\nimport { useTransactions } from \"../../hooks/useTransactions\";\r\n\r\n\r\n\r\nexport function TransactionsTable() {\r\n  const {transactions} = useTransactions()\r\n  return (\r\n    <Container>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Titulo</th>\r\n            <th>Valor</th>\r\n            <th>Categoria</th>\r\n            <th>Data</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {transactions.map((transaction) => {\r\n            return (\r\n              <tr key={transaction.id}>\r\n                <td>{transaction.title}</td>\r\n                <td className={transaction.type}>\r\n                    {\r\n                    new Intl.NumberFormat(\"pt-BR\",\r\n                    {style:\"currency\",currency:\"BRL\"}\r\n                    ).format(transaction.amount)}\r\n                    </td>\r\n                <td>{transaction.category}</td>\r\n                <td>                    {\r\n                    new Intl.DateTimeFormat(\"pt-BR\").format(\r\n                        new Date(transaction.createdAt))}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </Container>\r\n  );\r\n}\r\n","import {Container} from \"./styles\"\r\nimport { Summary } from \"../Summary\" \r\nimport { TransactionsTable } from \"../TransactionsTable\"\r\n\r\nexport function Dashboard(){\r\n    return (\r\n        <Container>\r\n            <Summary></Summary>\r\n            <TransactionsTable></TransactionsTable>\r\n        </Container>\r\n    );\r\n}","import { createGlobalStyle } from \"styled-components\";\r\n\r\nexport const GlobalStyle = createGlobalStyle`\r\n  :root{\r\n      --background:#f0f2f5;\r\n      --red:#E52E4D;\r\n      --green:#33cc95;\r\n      --blue:#5429CC;\r\n\r\n      --blue-light:#6933FF;\r\n\r\n      --text-title:#363F5F;\r\n\r\n      --text-body:#969cb3;\r\n\r\n      --shape:#ffffff;\r\n  }\r\n\r\n\r\n *{\r\n     margin: 0px;\r\n     padding: 0px;\r\n     box-sizing: border-box;\r\n }\r\n\r\n html{\r\n     @media(max-width:1080px){\r\n         font-size: 93.75%;\r\n     }\r\n     @media(max-width:720px){\r\n         font-size: 87.5%;\r\n     }\r\n }\r\n\r\n body,input,textarea,button{\r\n     font-family: \"Poppins\",sans-serif;\r\n     font-weight: 400;\r\n }\r\n h1,h2,h3,h4,h5,h6,strong{\r\n     font-weight: 600;\r\n }\r\n\r\n body{\r\n     background: var(--background);\r\n     -webkit-font-smoothing:antialised;\r\n }\r\n\r\n button{\r\n     cursor: pointer;\r\n }\r\n [disabled]{\r\n     opacity: 0.6;\r\n     cursor: not-allowed;\r\n }\r\n .react-modal-overlay{\r\n     background: rgba(0,0,0,0.5);\r\n     position: fixed;\r\n     top: 0;\r\n     bottom: 0;\r\n     left: 0;\r\n     right: 0;\r\n\r\n     display: flex;\r\n     align-items: center;\r\n     justify-content: center;\r\n }\r\n .react-modal-content{\r\n     width: 100%;\r\n     max-width:576px;\r\n     background: var(--background);\r\n     padding: 3rem;\r\n     position:relative;\r\n     border-radius: 0.25rem;\r\n }\r\n .react-modal-close{\r\n     position: absolute;\r\n     right: 1.5rem;\r\n     top: 1.5rem;\r\n     border: 0;\r\n     background: transparent;\r\n\r\n     transition: filter 0.2s;\r\n     &:hover{\r\n         filter: brightness(0.8);\r\n     }\r\n }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { darken,transparentize } from \"polished\";\r\nconst Container = styled.form`\r\n  h2 {\r\n    color: var(--text-title);\r\n    font-size: 1.5rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n  input {\r\n    width: 100%;\r\n    padding: 0 1.5rem;\r\n    height: 4rem;\r\n    border-radius: 0.25rem;\r\n    border: 1px solid #d7d7d7;\r\n    background: #e7e9ee;\r\n    font-weight: 400;\r\n    font-size: 1rem;\r\n\r\n    &::placeholder {\r\n      color: var(--text-body);\r\n    }\r\n\r\n    & + input {\r\n      margin-top: 1rem;\r\n    }\r\n  }\r\n\r\n  button[type=\"submit\"] {\r\n    width: 100%;\r\n    padding: 0 1.5rem;\r\n    height: 4rem;\r\n    background: var(--green);\r\n    color: #fff;\r\n    border-radius: 0.25rem;\r\n    border: 0;\r\n    font-size: 1rem;\r\n    margin-top: 1.5rem;\r\n    font-weight: 600;\r\n\r\n    transition: filter 0.2s;\r\n\r\n    &:hover {\r\n      filter: brightness(0.9);\r\n    }\r\n  }\r\n`;\r\n\r\nconst TransactionContainer = styled.div`\r\n  margin: 1rem 0;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n  gap: 0.5rem;\r\n`;\r\n\r\ninterface RadioBoxProps {\r\n  isActive:boolean\r\n  activeColor: \"green\" | \"red\"\r\n}\r\n\r\nconst colors ={\r\n  green:\"#33cc95\",\r\n  red:\"#E52E4D\"\r\n}\r\n\r\n\r\nconst RadioBox = styled.button<RadioBoxProps>`\r\n  height: 4rem;\r\n  border: 1px solid #d7d7d7;\r\n  border-radius: 0.25rem;\r\n  background: ${(props)=> props.isActive ? transparentize(0.9,colors[props.activeColor]) : \"transparent\"};\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  transition: border-color 0.2s;\r\n\r\n\r\n  &:hover {\r\n    border-color: ${darken(0.1, \"#d7d7d7\")};\r\n  }\r\n\r\n  img {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n  span {\r\n    display: inline-block;\r\n    margin-left: 1rem;\r\n    font-size: 1rem;\r\n    color: var(--text-title);\r\n  }\r\n`;\r\n\r\nexport { Container, TransactionContainer, RadioBox };\r\n","export default __webpack_public_path__ + \"static/media/close.f62862c6.svg\";","import Modal from \"react-modal\";\r\nimport { Container,TransactionContainer,RadioBox } from \"./styles\";\r\nimport closeImg from \"../../assets/close.svg\";\r\nimport entradaImg from \"../../assets/entradas.svg\";\r\nimport saidaImg from \"../../assets/saidas.svg\";\r\nimport { FormEvent, useState } from \"react\";\r\nimport {useTransactions} from \"../../hooks/useTransactions\"\r\n\r\ninterface NewTransactionModalProps {\r\n  onRequestClose: () => void;\r\n  isOpen: boolean;\r\n}\r\n\r\nexport function NewTransactionModal({\r\n  onRequestClose,\r\n  isOpen,\r\n}: NewTransactionModalProps) {\r\n\r\n  const [type,setType] = useState(\"deposit\")\r\n  const [title,setTitle] = useState(\"\")\r\n  const [category,setCategory] = useState(\"\")\r\n  const [amount,setAmount] = useState(0)\r\n  const {createTransaction} = useTransactions();\r\n\r\n\r\n  async function handleCreateNewTransaction(e:FormEvent){\r\n    e.preventDefault();\r\n    await createTransaction({\r\n      type,\r\n      title,\r\n      category,\r\n      amount\r\n    })\r\n    setType(\"deposit\")\r\n    setTitle(\"\")\r\n    setCategory(\"\")\r\n    setAmount(0)\r\n    onRequestClose();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onRequestClose={onRequestClose}\r\n      overlayClassName=\"react-modal-overlay\"\r\n      className=\"react-modal-content\"\r\n    >\r\n      <button className=\"react-modal-close\" type=\"button\" onClick={onRequestClose}>\r\n        <img src={closeImg} alt=\"Fechar Modal\" />\r\n      </button>\r\n\r\n      <Container\r\n      onSubmit={(e)=> handleCreateNewTransaction(e)}\r\n      >\r\n        <h2>Cadastrar transação</h2>\r\n        <input \r\n        type=\"text\" \r\n        placeholder=\"Título\"\r\n        value={title}\r\n        onChange={(e)=> setTitle(e.target.value)}\r\n        />\r\n\r\n        <input \r\n        type=\"number\" \r\n        placeholder=\"Valor\"\r\n        value={amount}\r\n        onChange={(e)=> setAmount(+e.target.value)}\r\n        />\r\n        <TransactionContainer>\r\n          <RadioBox\r\n          type=\"button\"\r\n          onClick={()=> setType(\"deposit\")}\r\n          isActive={type === \"deposit\"}\r\n          activeColor=\"green\"\r\n          >\r\n            <img src={entradaImg} alt=\"Entrada\" />\r\n            <span>Entrada</span>\r\n          </RadioBox>\r\n          <RadioBox\r\n          type=\"button\"\r\n          onClick={()=> setType(\"withdraw\")}\r\n          isActive={type === \"withdraw\"}\r\n          activeColor=\"red\"\r\n          >\r\n            <img src={saidaImg} alt=\"Saida\" />\r\n            <span>Saida</span>\r\n          </RadioBox>\r\n        </TransactionContainer>\r\n\r\n        <input \r\n        type=\"text\" \r\n        placeholder=\"Categoria\"\r\n        value={category}\r\n        onChange={(e)=> setCategory(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Cadastrar</button>\r\n      </Container>\r\n    </Modal>\r\n  );\r\n}\r\n","import { Header } from \"./components/Header/Index\";\nimport { Dashboard } from \"./components/Dashboard/index\";\nimport { GlobalStyle } from \"./styles/global\";\nimport Modal from \"react-modal\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { useState } from \"react\";\nimport{TransactionsProvider} from \"./hooks/useTransactions\"\n\nModal.setAppElement(\"#root\")\n\nexport function App() {\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] =\n    useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(!isNewTransactionModalOpen);\n  }\n\n  function handleCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(!isNewTransactionModalOpen);\n  }\n\n  return (\n    <TransactionsProvider>\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal} />\n      <Dashboard></Dashboard>\n      <NewTransactionModal \n      isOpen={isNewTransactionModalOpen}\n      onRequestClose={handleCloseNewTransactionModal}\n      />\n      <GlobalStyle />\n    </TransactionsProvider>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createServer, Model } from \"miragejs\";\nimport { App } from \"./App\";\n\ncreateServer({\n  models: {\n    transaction: Model,\n  },\n\n  seeds(server) {\n    server.db.loadData({\n      transactions: [\n        {\n          id: 1,\n          title: \"Freelance de WebSite\",\n          type: \"deposit\",\n          category: \"Dev\",\n          amount: 600,\n          createdAt: new Date(\"2021-03-10 09:00:00\"),\n        },\n        {\n          id: 2,\n          title: \"Curso\",\n          type: \"withdraw\",\n          category: \"Estudos\",\n          amount: 30,\n          createdAt: new Date(\"2021-05-28 18:00:00\"),\n        },\n      ],\n    });\n  },\n\n  routes() {\n    this.namespace = \"api\";\n\n    this.get(\"/transactions\", () => {\n      return this.schema.all(\"transaction\");\n    });\n\n    this.post(\"/transactions\", (schema, request) => {\n      const data = JSON.parse(request.requestBody);\n      return schema.create(\"transaction\", data);\n    });\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}